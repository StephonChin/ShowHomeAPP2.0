C51 COMPILER V9.52.0.0   NTC_MSR                                                           03/19/2018 13:49:42 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE NTC_MSR
OBJECT MODULE PLACED IN Ntc_Msr.obj
COMPILER INVOKED BY: C:\Keil\C51\C51\BIN\C51.EXE PrivateSrc\Ntc_Msr.c BROWSE INCDIR(.\PrivateInc;.\PublicInc) DEBUG OBJE
                    -CTEXTEND PRINT(.\Ntc_Msr.lst) OBJECT(Ntc_Msr.obj)

line level    source

   1          /***********************************************************
   2                  *
   3                  * File Name                     | Ntc_Msr.c
   4                  * Date                                  | 2016.11.22
   5                  * Author                                | DS.Chin
   6                  * Description           | 检测环境度并加热
   7                  *
   8          ************************************************************/
   9          
  10          /* Include Files -------------------------------------------------------------*/
  11          #include "Ntc_Msr.h"
  12          
  13          
  14          /* Global Variables ----------------------------------------------------------*/
  15          _TypeEnumNtc    NtcStatus;
  16          
  17          
  18          
  19          /*--------------------------< File Parameters >-----------------------------*/
  20          idata _Uint8                    ProtectTime[3];
  21          idata _Flag                         ProtectFlag;
  22          idata _Flag                         ProtectInit;
  23          
  24          /**
  25                  * @Function Name                        Ntc_Msr
  26                  * @Parameters                                   None
  27                  * @Return                                                       None
  28                  */
  29          void    Ntc_Msr(void)
  30          {
  31   1          _Uint8                      TmprtrVal = 0;
  32   1              
  33   1              TmprtrVal = AD_Val_Get();       //取得温度值
  34   1              
  35   1              
  36   1              /* ERROR */
  37   1              if (TmprtrVal > T_MIN || TmprtrVal < T_MAX)
  38   1              {
  39   2                      PORT_HOT        = HOT_OFF;
  40   2                      NtcStatus = NTC_IDLE;
  41   2                      return;
  42   2              }
  43   1              
  44   1              if (ProtectFlag == FALSE)
  45   1              {
  46   2                      /* 当温度小于20度时,加热 */
  47   2                      if (TmprtrVal > T_20 && ProtectFlag == FALSE)
  48   2                      {
  49   3                              PORT_HOT = HOT_ON;
  50   3                              NtcStatus = NTC_HOT;
  51   3                      }
  52   2                      
  53   2                      /* 当温度大于30度时,则停止加热 */
  54   2                      if (TmprtrVal < T_30)
C51 COMPILER V9.52.0.0   NTC_MSR                                                           03/19/2018 13:49:42 PAGE 2   

  55   2                      {
  56   3                              PORT_HOT = HOT_OFF;
  57   3                              NtcStatus = NTC_IDLE;
  58   3                      }
  59   2              }
  60   1              
  61   1              /* 当温度大于55度时,开启过温保护 */
  62   1              if (TmprtrVal < T_55)
  63   1              {
  64   2                      NtcStatus = NTC_BAN;
  65   2                      if (ProtectFlag == FALSE)
  66   2                      {
  67   3                              ProtectFlag = TRUE;
  68   3                              ProtectInit = TRUE;
  69   3                      }
  70   2                      
  71   2                      //关闭加热
  72   2                      PORT_HOT        = HOT_OFF;
  73   2              }
  74   1              
  75   1              /* 过温保护计时,1h == 60min == 3600s */
  76   1              if (ProtectFlag == TRUE)
  77   1              {
  78   2                      if (ProtectInit == TRUE)
  79   2                      {
  80   3                              ProtectInit = FALSE;
  81   3                              ProtectTime[0] = 0;
  82   3                              ProtectTime[1] = 0;
  83   3                              ProtectTime[2] = 0;
  84   3                      }
  85   2                              
  86   2                      ProtectTime[0]++;
  87   2                      if (ProtectTime[0] >= 50)       //1s
  88   2                      {
  89   3                              ProtectTime[0] = 0;
  90   3                              ProtectTime[1]++;
  91   3                              if (ProtectTime[1] >= 60)       //1min
  92   3                              {
  93   4                                      ProtectTime[1] = 0;
  94   4                                      ProtectTime[2]++;
  95   4                                      if (ProtectTime[2] >= 60)
  96   4                                      {
  97   5                                              ProtectTime[2] = 0;
  98   5                                              
  99   5                                              //一小时后温度高于50度,继续冷却
 100   5                                              if (TmprtrVal < T_50)
 101   5                                              {
 102   6                                                      ProtectInit = TRUE;
 103   6                                              }
 104   5                                              
 105   5                                              //温度低于50度,则关闭温度保护
 106   5                                              else
 107   5                                              {
 108   6                                                      ProtectFlag = FALSE;
 109   6                                                      NtcStatus = NTC_BAN_EXIT;
 110   6                                              }
 111   5                                      }
 112   4                              }
 113   3                      }
 114   2              }
 115   1      }
 116          
C51 COMPILER V9.52.0.0   NTC_MSR                                                           03/19/2018 13:49:42 PAGE 3   

 117          /**
 118                  * @Function             AD_Val_Get
 119                  * @Parameters           None
 120                  * @Return                       None
 121                  */
 122          static _Uint8   AD_Val_Get(void)
 123          {
 124   1              _Uint8          AdCnt   = 0;
 125   1              _Uint8          AdMax   = 0;
 126   1              _Uint8          AdMin   = 0xff;
 127   1              _Uint8          AdData  = 0;
 128   1              _Uint16         AdSum           = 0;
 129   1              
 130   1              AdSum = 0;
 131   1              for (AdCnt = 0; AdCnt < 11; AdCnt++)
 132   1              {
 133   2                      //Start
 134   2                      ADCS = 1;
 135   2                      
 136   2                      //Wait
 137   2                      while(!ADCF);
 138   2              
 139   2                      AdData  = ADCRH;
 140   2              
 141   2                      if (AdCnt > 0)          //抛弃第一次数据
 142   2                      {
 143   3                              if (AdMax < AdData)             AdMax = AdData;
 144   3                              if (AdMin > AdData)             AdMin = AdData;
 145   3                              AdSum += (_Uint16)AdData;
 146   3                      }
 147   2              }
 148   1              
 149   1              // 取减去最大最小值后的平均值
 150   1              AdSum -= (AdMax + AdMin);
 151   1              AdSum >>= 3;
 152   1              
 153   1              return((_Uint8)AdSum);
 154   1      }
 155          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    218    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       1
   IDATA SIZE       =      5    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
