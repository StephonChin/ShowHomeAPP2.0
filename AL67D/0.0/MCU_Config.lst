C51 COMPILER V9.52.0.0   MCU_CONFIG                                                        03/19/2018 13:49:41 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MCU_CONFIG
OBJECT MODULE PLACED IN MCU_Config.obj
COMPILER INVOKED BY: C:\Keil\C51\C51\BIN\C51.EXE PrivateSrc\MCU_Config.c BROWSE INCDIR(.\PrivateInc;.\PublicInc) DEBUG O
                    -BJECTEXTEND PRINT(.\MCU_Config.lst) OBJECT(MCU_Config.obj)

line level    source

   1          /********************************************************************
   2                  *
   3                  * File Name                             = Configuration.c
   4                  * Date                                          = 2016.10.28
   5                  * Author                                        = DS.Chin
   6                  *
   7          *********************************************************************/
   8          #include "MCU_Config.h"
   9          
  10          _Uint8                  HseStatus;
  11          
  12          
  13          /******************************************************************
  14                  *
  15                  * Function Name                 MCU_Config
  16                  *
  17          ******************************************************************/
  18          void MCU_Config(void)
  19          {
  20   1          /* Disable Interrupt */
  21   1              IE &= ~BIT7;
  22   1          
  23   1              CLK_Init();
  24   1              
  25   1              GPIO_Init();
  26   1              
  27   1              TIM_Init();
  28   1              
  29   1              ADC_Init();
  30   1              
  31   1              UART_Init();
  32   1          
  33   1          WDT_Init();
  34   1          
  35   1          /* Enable Interrupt */
  36   1              IE |= BIT7;
  37   1      }
  38          
  39          /******************************************************************
  40                  *
  41                  * Function Name                 CLK_Init
  42                  *
  43          ******************************************************************/
  44          static void CLK_Init(void)
  45          {
  46   1              _Uint16 ClkChgTime = 10000;
  47   1              
  48   1              TA              = 0xAA;
  49   1              TA              = 0x55;
  50   1              CKEN|= BIT7;                                    // change clock to HXT
  51   1              
  52   1              
  53   1              while ( !(CKSWT & 0x80) && (ClkChgTime != 0))                                   ClkChgTime--;           /* Wait HXT stable */
  54   1              
C51 COMPILER V9.52.0.0   MCU_CONFIG                                                        03/19/2018 13:49:41 PAGE 2   

  55   1              /* HXT open successfully */
  56   1              if (ClkChgTime > 0)  
  57   1              {
  58   2                      TA      = 0xAA;
  59   2                      TA      = 0x55;
  60   2                      CKSWT   = 0x2;                          // switch source to HXT
  61   2                      
  62   2                      TA              = 0xAA;
  63   2                      TA              = 0x55;
  64   2                      CKEN   &= ~BIT5;                        // Close HIRC
  65   2                      
  66   2                      HseStatus = 1;
  67   2              }
  68   1              
  69   1              /* HXT open fail */
  70   1              else
  71   1              {
  72   2                      TA              = 0xAA;
  73   2                      TA              = 0x55;
  74   2                      CKSWT  &= ~(BIT1 | BIT0);       
  75   2                      HseStatus = 0;
  76   2              }
  77   1      }
  78          
  79          /******************************************************************
  80                  *
  81                  * Function Name                 GPIO_Init
  82                  *
  83          ******************************************************************/
  84          static void GPIO_Init(void)
  85          {
  86   1              //P20 P21 P22 P23 output P-P
  87   1              P2M1 &= ~(BIT0 | BIT1 | BIT2 | BIT3);
  88   1              P2M2 |= (BIT0 | BIT1 | BIT2 | BIT3);
  89   1              P2   &= ~(BIT0 | BIT1 | BIT2 | BIT3);
  90   1              
  91   1              //P02 P05 P06 P07 output P-P
  92   1          P0M1 &= ~(BIT2 | BIT5 | BIT6 | BIT7);
  93   1          P0M2 |= (BIT2 | BIT5 | BIT6 | BIT7);
  94   1          P0   &= ~(BIT2 | BIT5 | BIT6 | BIT7);
  95   1          
  96   1          //P26 Input
  97   1          P2M1 |= BIT6;
  98   1          P2M2 &= ~BIT6;
  99   1      }
 100          
 101          /******************************************************************
 102                  *
 103                  * Function Name                 TIM_Init
 104                  *
 105          ******************************************************************/
 106          static void TIM_Init(void)
 107          {
 108   1              /* TIMER 0 */
 109   1              TMOD    = 0x2;
 110   1              CKCON  &= ~BIT3;    //8/12 = 2/3M or 1.843M
 111   1          if (HseStatus > 0)  //external 8M crystal
 112   1          {
 113   2              TL0     = 190;
 114   2              TH0     = 190;  //66 * 3 / 2 = 100us
 115   2          }
 116   1          else
C51 COMPILER V9.52.0.0   MCU_CONFIG                                                        03/19/2018 13:49:41 PAGE 3   

 117   1          {
 118   2              TL0     = 72;
 119   2              TH0     = 72;   //184 / 1.843 = 100us
 120   2          }
 121   1              ET0     = 1;
 122   1              TCON   |= BIT4;
 123   1              
 124   1              /* TIMER 2 */
 125   1              T2CON   = 0x0;
 126   1              T2MOD   = 0xA0;     //8/16 = 0.5M = 2us or 22.118 / 16 = 1.382375M
 127   1          
 128   1          if (HseStatus > 0)
 129   1          {
 130   2              
 131   2              RCMP2L  = 0xF0;
 132   2              RCMP2H  = 0xD8;                         //20ms
 133   2          }
 134   1          else
 135   1          {
 136   2              RCMP2L  = 0x00;
 137   2              RCMP2H  = 0x94;                         //20ms
 138   2          }
 139   1              TR2     = 1;
 140   1      }
 141          
 142          
 143          /*******************************************************************
 144                  *
 145                  * Function Name                 ADC_Init
 146                  *
 147          ******************************************************************/
 148          static void ADC_Init(void)
 149          {
 150   1          //P03 Selected as A/D input
 151   1              P0M1 |= BIT3;
 152   1          P0M2 &= ~BIT3;
 153   1          
 154   1          //A/D configuration
 155   1          ADCCON0     = 0x03;         //Channel 3
 156   1          ADCCON1     = 0x21;         //Vref = VDD, Fadc = Fsys / 4,  ADC enable
 157   1          ADCCON2     = 0x0;
 158   1          ADCAQT      = 14;           // 20 cycle
 159   1          ADCS        = 1;            // Start to converse A/D value 
 160   1      }
 161          
 162          
 163          /******************************************************************
 164              *
 165                  * FUNCTION NAME                 UART_Init
 166                  * INPUT                                 None
 167                  * OUTPUT                                None
 168              *
 169          ******************************************************************/
 170          static void UART_Init(void)
 171          {
 172   1              /* P24 Rx, P25 Tx*/
 173   1              P2M1    &= ~(BIT4 | BIT5);
 174   1              P2M2    &= ~(BIT4 | BIT5);
 175   1              P2              |= (BIT4 | BIT5);       // P24 = 1, P25 = 1
 176   1              
 177   1              /* Set UART */
 178   1              SCON_1 = 0x50;          // work at mode 1
C51 COMPILER V9.52.0.0   MCU_CONFIG                                                        03/19/2018 13:49:41 PAGE 4   

 179   1              T3CON   |= BIT7;
 180   1              T3CON &= ~BIT6;
 181   1              
 182   1              /* Bond Rate 9600 */
 183   1              T3CON   &= ~(BIT0 | BIT1 | BIT2);
 184   1          if (HseStatus > 0)
 185   1          {
 186   2              RH3             = 0xFF;
 187   2              RL3     = 0xCC;                 // Rate = 8M / (16 * (0xffff - 0xffCB + 1))     = 8M / (16 * 52) = 9600;
 188   2          }
 189   1          else
 190   1          {
 191   2              RH3             = 0xFF;
 192   2              RL3     = 0x70;         // Rate = 22.118M / (16 * (0xffff - 0xff70 + 1))        = 22.118M / (16 * 144) = 9600;
 193   2          }
 194   1              T3CON |= BIT3;
 195   1              
 196   1              EIP1    |= BIT0;
 197   1              EIPH1   |= BIT0;
 198   1              
 199   1      
 200   1              /* Receive Interrupt Enable */
 201   1              EIE1 |= BIT0;
 202   1      }
 203          
 204          /******************************************************************
 205              *
 206                  * FUNCTION NAME                 WDT_Init
 207                  * INPUT                                 None
 208                  * OUTPUT                                None
 209              *
 210          ******************************************************************/
 211          static void WDT_Init(void)
 212          {
 213   1          TA                  = 0xAA;
 214   1          TA                  = 0x55;
 215   1          WDCON       = 0xC3;     // 102.4ms
 216   1      }
 217          
 218          
 219          
 220          
 221          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    271    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
