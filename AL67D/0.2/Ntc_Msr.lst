C51 COMPILER V9.52.0.0   NTC_MSR                                                           04/16/2018 20:02:14 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE NTC_MSR
OBJECT MODULE PLACED IN .\HexDocument\Ntc_Msr.obj
COMPILER INVOKED BY: C:\Keil\C51\C51\BIN\C51.EXE PrivateSrc\Ntc_Msr.c BROWSE INCDIR(.\PrivateInc;.\PublicInc) DEBUG OBJE
                    -CTEXTEND PRINT(.\Ntc_Msr.lst) TABS(2) OBJECT(.\HexDocument\Ntc_Msr.obj)

line level    source

   1          /***********************************************************
   2            *
   3            * File Name     | Ntc_Msr.c
   4            * Date          | 2016.11.22
   5            * Author        | DS.Chin
   6            * Description   | 检测环境度并加热
   7            *
   8          ************************************************************/
   9          
  10          /* Include Files -------------------------------------------------------------*/
  11          #include "Ntc_Msr.h"
  12          
  13          
  14          /* Global Variables ----------------------------------------------------------*/
  15          _TypeEnumNtc  NtcStatus;
  16          
  17          
  18          
  19          /*--------------------------< File Parameters >-----------------------------*/
  20          idata _Uint8      ProtectTime[3] = {0,0,0};
  21          idata _Flag         ProtectFlag = FALSE;
  22          idata _Flag         ProtectInit = FALSE;
  23          
  24          /**
  25            * @Function Name      Ntc_Msr
  26            * @Parameters         None
  27            * @Return             None
  28            */
  29          void  Ntc_Msr(void)
  30          {
  31   1          _Uint8      TmprtrVal = 0;
  32   1          
  33   1          
  34   1          if (TestFlag == TRUE)       return;
  35   1        
  36   1        TmprtrVal = AD_Val_Get(); //取得温度值
  37   1        
  38   1        
  39   1        /* ERROR */
  40   1        if (TmprtrVal > T_MIN || TmprtrVal < T_MAX)
  41   1        {
  42   2          PORT_HOT  = HOT_OFF;
  43   2          NtcStatus = NTC_IDLE;
  44   2          return;
  45   2        }
  46   1        
  47   1        if (ProtectFlag == FALSE)
  48   1        {
  49   2          /* 当温度小于20度时,加热 */
  50   2          if (TmprtrVal > T_20 && ProtectFlag == FALSE)
  51   2          {
  52   3            PORT_HOT = HOT_ON;
  53   3            NtcStatus = NTC_HOT;
  54   3          }
C51 COMPILER V9.52.0.0   NTC_MSR                                                           04/16/2018 20:02:14 PAGE 2   

  55   2          
  56   2          /* 当温度大于30度时,则停止加热 */
  57   2          if (TmprtrVal < T_30)
  58   2          {
  59   3            PORT_HOT = HOT_OFF;
  60   3            NtcStatus = NTC_IDLE;
  61   3          }
  62   2        }
  63   1        
  64   1        /* 当温度大于55度时,开启过温保护 */
  65   1        if (TmprtrVal < T_55)
  66   1        {
  67   2          NtcStatus = NTC_BAN;
  68   2          if (ProtectFlag == FALSE)
  69   2          {
  70   3            ProtectFlag = TRUE;
  71   3            ProtectInit = TRUE;
  72   3          }
  73   2          
  74   2          //关闭加热
  75   2          PORT_HOT  = HOT_OFF;
  76   2        }
  77   1        
  78   1        /* 过温保护计时,1h == 60min == 3600s */
  79   1        if (ProtectFlag == TRUE)
  80   1        {
  81   2          if (ProtectInit == TRUE)
  82   2          {
  83   3            ProtectInit = FALSE;
  84   3            ProtectTime[0] = 0;
  85   3            ProtectTime[1] = 0;
  86   3            ProtectTime[2] = 0;
  87   3          }
  88   2            
  89   2          ProtectTime[0]++;
  90   2          if (ProtectTime[0] >= 50) //1s
  91   2          {
  92   3            ProtectTime[0] = 0;
  93   3            ProtectTime[1]++;
  94   3            if (ProtectTime[1] >= 60) //1min
  95   3            {
  96   4              ProtectTime[1] = 0;
  97   4              ProtectTime[2]++;
  98   4              if (ProtectTime[2] >= 60)
  99   4              {
 100   5                ProtectTime[2] = 0;
 101   5                
 102   5                //一小时后温度高于50度,继续冷却
 103   5                if (TmprtrVal < T_50)
 104   5                {
 105   6                  ProtectInit = TRUE;
 106   6                }
 107   5                
 108   5                //温度低于50度,则关闭温度保护
 109   5                else
 110   5                {
 111   6                  ProtectFlag = FALSE;
 112   6                  NtcStatus = NTC_BAN_EXIT;
 113   6                }
 114   5              }
 115   4            }
 116   3          }
C51 COMPILER V9.52.0.0   NTC_MSR                                                           04/16/2018 20:02:14 PAGE 3   

 117   2        }
 118   1      }
 119          
 120          /**
 121            * @Function     AD_Val_Get
 122            * @Parameters   None
 123            * @Return     None
 124            */
 125          static _Uint8 AD_Val_Get(void)
 126          {
 127   1        _Uint8    AdCnt   = 0;
 128   1        _Uint8    AdMax   = 0;
 129   1        _Uint8    AdMin   = 0xff;
 130   1        _Uint8    AdData  = 0;
 131   1        _Uint16   AdSum   = 0;
 132   1        
 133   1        AdSum = 0;
 134   1        for (AdCnt = 0; AdCnt < 11; AdCnt++)
 135   1        {
 136   2          //Start
 137   2          ADCS = 1;
 138   2          
 139   2          //Wait
 140   2          while(!ADCF);
 141   2        
 142   2          AdData  = ADCRH;
 143   2        
 144   2          if (AdCnt > 0)    //抛弃第一次数据
 145   2          {
 146   3            if (AdMax < AdData)   AdMax = AdData;
 147   3            if (AdMin > AdData)   AdMin = AdData;
 148   3            AdSum += (_Uint16)AdData;
 149   3          }
 150   2        }
 151   1        
 152   1        // 取减去最大最小值后的平均值
 153   1        AdSum -= (AdMax + AdMin);
 154   1        AdSum >>= 3;
 155   1        
 156   1        return((_Uint8)AdSum);
 157   1      }
 158          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    228    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       1
   IDATA SIZE       =      5    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
